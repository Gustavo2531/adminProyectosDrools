package org.drools.workshop;
import org.drools.workshop.model.*;

rule "prueba"
    when

    then
        System.out.println("Soy la prueba drools si corre");
end
rule "Max Room Temp"
    when
        $m: SensorM(movimiento == true)
        $ac: ActuadorC($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $r: Cuarto($ac.ubicacionE==ubicacionE && $ac.ubicacionC==ubicacionC && $ac.temperatura>maxtemperatura )
    then
        $ac.setTemperatura($r.getMaxTemperatura());
    end

rule "Min Room Temp"

    when
        $m: SensorM(movimiento == true)
        $ac: ActuadorC($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $r: Cuarto($ac.ubicacionE==ubicacionE && $ac.ubicacionC==ubicacionC && $ac.temperatura < mintemperatura )
    then
         $ac.setTemperatura($r.getMinTemperatura());
        
    end

rule "No Movement F"
    when
        $m: SensorM(movimiento == false)
        $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $af: ActuadorF($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        
    then
        $af.setEstado(false);
end
rule "No Movement C"
    when
        $m: SensorM(movimiento == false)
        $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $ac: ActuadorC($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        
    then
        $ac.setEstado(false);
    
end
rule "No Movement A"
    when
        $m: SensorM(movimiento == false)
        $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $aa: ActuadorA($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)

    then
        $aa.setEstado(false);
    
end

rule "Movement F"
    when
        $m: SensorM(movimiento == true)
        $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $af: ActuadorF($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        
    then
        $af.setEstado(true);
    
end
rule " Movement C"
    when
        $m: SensorM(movimiento == true)
        $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $ac: ActuadorC($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        
    then
        $ac.setEstado(true);
    
end
rule "Movement A"
    when
        $m: SensorM(movimiento == true)
        $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $aa: ActuadorA($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)

    then
        $aa.setEstado(true);
    
end
rule "Consumo de Energia A"
    when
        $m: SensorM(movimiento == true)
        $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $aa: ActuadorA($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC && estado==true)
        eval(($aa.getConsumoEnergia()) > $r.getMaxConsumoEnergia())
    then
        $aa.setEstado(false);
end
rule "Consumo de Energia F"
    when
        $m: SensorM(movimiento == true)
        $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $af: ActuadorC($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC && estado==true)
        eval($af.getConsumoEnergia() > $r.getMaxConsumoEnergia())
    then
        $af.setEstado(false);
end
rule "Consumo de Energia C"
    when
        $m: SensorM(movimiento == true)
        $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $ac: ActuadorC($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC && estado==true)
        eval(($ac.getConsumoEnergia()) > $r.getMaxConsumoEnergia())
    then
        $ac.setEstado(false);
end
rule "Max Vel"
    when
        $m: SensorM(movimiento == true)
        $aa: ActuadorA($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $r: Cuarto($aa.ubicacionE==ubicacionE && $aa.ubicacionC==ubicacionC && maxVelocidad <= $aa.velocidad)
    then
        $aa.setVelocidad($r.getMaxVelocidad());
    
    end

rule "Min Vel"
    when
        $m: SensorM(movimiento == true)
        $aa: ActuadorA($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
        $r: Cuarto($aa.ubicacionE==ubicacionE && $aa.ubicacionC==ubicacionC && minVelocidad >= $aa.velocidad)
    then
        $aa.setVelocidad($r.getMinVelocidad());
    
    end

rule "Apagar Luz"
  when
    $m: SensorM(movimiento == true && $m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    $s: SensorL($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    $f: ActuadorF($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    eval($s.getLuzAmbiente() > $r.getThreshold())
  then
    $f.setEstado(false);
end

rule "Prender Luz"
  when
    $m: SensorM(movimiento == true && $m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    $s: SensorL($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    $f: ActuadorF($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    eval($s.getLuzAmbiente() < $r.getThreshold())
  then
    $f.setEstado(true);
    $f.setIntensidad($r.getThreshold()-$s.getLuzAmbiente());
end

rule "Bajar cantidad de Luz"
  when
    $m: SensorM(movimiento == true && $m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    $s: SensorL($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    $f: ActuadorF($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    eval($s.getLuzAmbiente() < $r.getThreshold() && $s.getLuzAmbiente() + $s.getLuzArtificial() > $r.getThreshold())
  then
    $f.setIntensidad($r.getThreshold()-$s.getLuzAmbiente());
end

rule "Subir cantidad de Luz"
  when
    $m: SensorM(movimiento == true && $m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    $s: SensorL($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    $r: Cuarto($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    $f: ActuadorF($m.ubicacionE==ubicacionE && $m.ubicacionC==ubicacionC)
    eval($s.getLuzAmbiente() < $r.getThreshold() && $s.getLuzAmbiente() + $s.getLuzArtificial() < $r.getThreshold())
  then
    $f.setIntensidad($r.getThreshold()-$s.getLuzAmbiente());
end